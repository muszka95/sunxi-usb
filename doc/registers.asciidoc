Sun7i M-USB registers
=====================
Tommie Gannert


Terminology
-----------
Each register is marked with the offset from the base, whether it is read or write and if it is part of the standard MUSB driver.


Base addresses
--------------
USBC0 is at 0x01C13_0000.


FIFOx/EPFIFOx (0x0000-0x0014)
-----------------------------


POWER/PCTL (0x0040)
-------------------
Read/Write, MUSB

Allwinner calls it `PCTL`, while MUSB says `POWER`.

[options="header"]
|======================================
|Bits |R/W|Name            |Description
|   7 |RW |ISO_UPDATE_EN   |Only device, ???
|   6 |RW |SOFT_CONNECT    |Only device, 1 to connect to bus, 0 to be disconnected. This likely directly disconnects the DATA pull-ups.
|   5 |RW |HIGH_SPEED_EN   |Enable HS transfers. Probably by allowing the K chirp on reset, and looking at the hub response.
|   4 |R  |HIGH_SPEED_FLAG |1 if HS is supported by the hub. This is probably established during the RESET phase. If not, the device is at FS.
|   3 |RW |RESET           |1 to keep USBC in RESET mode.
|   2 |RW |RESUME          |1 to wake USBC from SUSPEND. Likely auto-resets to 0.
|   1 |RW |SUSPEND         |1 to put the device into SUSPEND.
|   0 |RW |SUSPEND_EN      |Enable suspend logic ???
|======================================


DEVCTL (0x0041)
---------------


INDEX/EPIND (0x0042)
--------------------


VEND0 (0x0043)
--------------


INTTx (0x0044)
--------------
Read, MUSB

Each endpoint has one bit indicating whether transmission of a new packet is possible. The register is reset upon read (see `musb_generic_disable()`.)


INTRx (0x0046)
--------------
Read, MUSB

Each endpoint has one bit indicating whether new data is available for reading. The register is reset on read (see `musb_generic_disable()`.) The EP0 receive interrupt is combined with transmit in INTTx and bit 0 is not defined.


INTTxE (0x0048)
---------------
Read/Write, MUSB

Each endpoint has one bit indicating whether interrupts for INTTx should be enabled or not.

WARNING:: Not cleared on read. Write a one to clear a bit.


INTRxE (0x004A)
---------------
Read/Write, MUSB

Each endpoint has one bit indicating whether interrupts for INTTx should be enabled or not. EP0 uses only INTTxE and bit 0 is not defined.

WARNING:: Not cleared on read. Write a one to clear a bit.


INTUSB (0x004C)
---------------

WARNING:: Not cleared on read. Write a one to clear a bit.


INTUSBE (0x0050)
----------------


FRAME/FRNUM (0x0054)
--------------------


EPINFO (0x0078)
---------------


RAMINFO (0x0079)
----------------


LINKINFO (0x007A)
-----------------


VPLEN (0x007B)
--------------


TESTMODE/TMCTL (0x007C)
-----------------------


HS_EOF1/HSEOF (0x007C, same as TESTMODE)
----------------------------------------
Is this really used?


FSEOF (0x007D)
--------------


LSEOF (0x007E)
--------------


VEND1 (0x007D)
--------------


VEND2 (0x007E)
--------------


TXMAXP (0x0080)
---------------


CSR0, TXCSR (0x0082)
--------------------


RXMAXP (0x0084)
---------------


RXCSR (0x0086)
--------------


COUNT0, RXCOUNT (0x0088)
------------------------


RPCOUNT (0x008A)
----------------


TYPE0/EP0TYPE, TXTYPE (0x008C)
------------------------------


NAKLIMIT0, TXINTERVAL (0x008D)
------------------------------


RXTYPE (0x008E)
---------------


RXINTERVAL (0x008F)
-------------------


TXFIFOSZ (0x0090)
-----------------


TXFIFOAD (0x0092)
-----------------


RXFIFOSZ (0x0094)
-----------------


RXFIFOAD (0x0096)
-----------------


FADDR (0x0098)
--------------
Read/Write, Almost-MUSB

For host mode: The address to receive from, or transmit to.

For device mode: The address of the device, or 0 if not yet set.

WARNING:: Only available if `EPIND == 0`.


TXHUBADDR/HADDR (0x009A)
------------------------


TXHUBPORT/HPORT (0x009B)
------------------------


RXFUNCADDR/RXFADDRx (0x009C)
----------------------------


RXHUBADDR/RXHADDRx (0x009E)
---------------------------


RXHUBPORT/RXHPORTx (0x009F)
---------------------------


CONFIGDATA (0x00C0)
-------------------


ISCR (0x0400)
-------------
Read/Write, SunXi


PHYCTL (0x0404)
---------------
Read/Write, SunXi


PHYBIST (0x0408)
----------------
Write, SunXi

PHY register bit address is written here.

One bit per address.


PHYTUNE (0x040C)
----------------
Read/Write, SunXi

PHY data is loaded here.

Data read happens on bit 0 for PHY0 and bit 1 for PHY1.

Data write happens on bit 7, while bit 0 is clock for PHY0 and bit 1 is clock for PHY1. Probably sampled on rising clock edge (see link:http://www.ulpi.org/ulpi_whitepaper_v2.pdf[ULPI whitepaper].)
